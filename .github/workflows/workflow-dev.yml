# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD Workflow Dev

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: users_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      #1. Checkout del repo
      - name: Checkout code
        uses: actions/checkout@v4

      #2. Set up de Java 21 para maven
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven


      #3. Build y test con maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      #4.Login a Dockerhub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #5. Build de la imagen Docker
      - name: Build Docker image
        run: docker build -t manumarcos/arreglaya-backend:dev .

      #6. Push a DockerHub
      - name: Push image
        run: docker push manumarcos/arreglaya-backend:dev

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/backend
            sudo docker compose up -d --force-recreate --pull always backend-app-dev



