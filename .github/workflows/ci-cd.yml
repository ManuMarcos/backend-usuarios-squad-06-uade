name: CI/CD Workflow

on:
  push:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # PostgreSQL para pruebas en CI
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: users_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout del repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # 3. Build y test con Maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 4. Login a DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Build + push imagen para dev y prod
      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=manumarcos/arreglaya-backend
          if [ "${GITHUB_REF##*/}" = "develop" ]; then
            TAG=dev
          elif [ "${GITHUB_REF##*/}" = "main" ]; then
            TAG=latest
          else
            echo "No se hace build para esta rama"
            exit 0
          fi
          echo "Construyendo imagen con tag $TAG..."
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/backend-usuarios-squad-06-uade
            if [ "${GITHUB_REF##*/}" = "develop" ]; then
              echo "Desplegando entorno DEV..."
              docker compose --env-file .env pull backend-app-dev
              docker compose --env-file .env up -d backend-app-dev
            elif [ "${GITHUB_REF##*/}" = "main" ]; then
              echo "Desplegando entorno PROD..."
              docker compose --env-file .env pull backend-app-prod
              docker compose --env-file .env up -d backend-app-prod
            fi
          
