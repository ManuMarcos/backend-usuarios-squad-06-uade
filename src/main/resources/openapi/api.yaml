openapi: 3.0.3
info:
  title: ReparaYa Users API
  version: "1.0.0"
servers:
  - url: http://localhost:8081

paths:
  /api/users/{id}:
    get:
      summary: Obtener usuario por ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Usuario
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: No encontrado

  /api/users/register:
    post:
      summary: Registrar usuario
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: Registro exitoso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "409":
          description: Conflicto

  /api/users/login:
    post:
      summary: Login de usuario
      description: El jwt contiene los campos "role" y "sub", el cual contiene el email del usuario.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"

  /api/users/{userId}/reset-password:
    patch:
      summary: Resetear contraseña
      operationId: resetPassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        "200":
          description: Mensaje de resultado
          content:
            text/plain:
              schema:
                type: string
                example: "Contraseña cambiada con éxito"
        "404":
          description: Usuario no existe

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        role:
          type: string
          example: CLIENTE ó PROVEEDOR
        active:
          type: boolean

    RegisterRequest:
      type: object
      required: [email, password, firstName, lastName, role]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        role:
          type: string
          example: CLIENTE ó PROVEEDOR

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: "Usuario registrado exitosamente."
        email:
          type: string
          format: email
        role:
          type: string
          example: CLIENTE ó PROVEEDOR

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    UserInfoLoginResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        isActive:
          type: boolean

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT
        userInfo:
          $ref: "#/components/schemas/UserInfoLoginResponse"
        message:
          type: string
          example: "Login exitoso"

    ResetPasswordRequest:
      type: object
      required: [newPassword]
      properties:
        newPassword:
          type: string
          format: password
          minLength: 6
